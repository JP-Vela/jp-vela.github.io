var width = getWidth();
var height = getHeight();


var populationVals = [];
var generation = 1;


function initGrid(){

    for(var i=0;i<4;i++){
        var tempPopVals = [];

        for(var j=0;j<4;j++){
            
            if(Math.random()<0.3){
                tempPopVals[j]=1;
            } else {
                tempPopVals[j]=0;
            } 
            


        }
        
        populationVals[i]=tempPopVals;
    

    }

/*
    populationVals[2][1]=1;
    populationVals[1][2]=1;
    populationVals[2][3]=1;
*/
    drawBoard();

}



function drawBoard(){
    removeAll();
    
    
    //var tempPopVals = [];
        
    for(var i=0;i<4;i++){
        
        for(var j=0;j<4;j++){
            
            var cell = new Rectangle(width/4,height/4);


            if(populationVals[j][i]==1){
                cell.setColor(Color.BLACK);
            } else {
                cell.setColor(Color.WHITE);
            } 
            cell.setPosition(cell.getWidth()*i,cell.getHeight()*j);

            add(cell);

        }
        
    }

}


function getNumNeighbors(x,y){
    var neighbors = 0;
    var pop = populationVals;
    
    if(x>0){
        if(pop[y][x-1]==1){
            neighbors++;
        }
    }
    
    if(y>0){
        if(pop[y-1][x]==1){
            neighbors++;
        }
    }
    
    if(y<3){
        if(pop[y+1][x]==1){
            neighbors++;
        }
    }
    
    if(x<3){
        if(pop[y][x+1]==1){
            neighbors++;
        }
    }
    
    
    
    if(x>0&&y>0){
        if(pop[y-1][x-1]==1){
            neighbors++;
        }
    }
    
    if(x<3&&y<3){
        if(pop[y+1][x+1]==1){
            neighbors++;
        }
    }
    
    if(x>0&&y<3){
        if(pop[y+1][x-1]==1){
            neighbors++;
        }
    }
    
    if(x<3&&y>0){
        if(pop[y-1][x+1]==1){
            neighbors++;
        }
    }
    
    return neighbors;
}

function isAlive(x,y){
    if(getNumNeighbors(x,y)==2 && populationVals[y][x]==1){
        return true;
    } else if (getNumNeighbors(x,y)<5 && getNumNeighbors(x,y)>=3){
        return true;
    }
    return false;
}


function progress(){
    var nextGen = [];
    for(var i =0;i<populationVals.length;i++){
        nextGen.push(new Array(4));
        for(var j = 0;j<populationVals[i].length;j++){
            nextGen[i][j]=0;
        }
    }
    
    
    for(var i = 0;i<4;i++){
        for(var j = 0;j<4;j++){
            if(isAlive(i,j)){
                nextGen[j][i]=1;
            } else {
                nextGen[j][i]=0;
            }
        }
    }
    
    println("Generation: "+generation);


    populationVals=nextGen;

  
    generation++;


}


function keyDown(e) {

	if(e.keyCode == Keyboard.SPACE){
	    progress();
		drawBoard();

	}
}


initGrid();

keyDownMethod(keyDown);